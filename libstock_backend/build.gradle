plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:4.0.0' // Adjust version as needed
	implementation "com.stripe:stripe-java:29.0.0"
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	implementation group: 'com.sparkjava', name: 'spark-core', version: '2.9.4'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'

	// added for security automation and methods through spring boot //
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// for Jwt Authentication //
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// for sending emails to users //
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// for Jwt implementation //
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // used for Jwt logic //
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // used for JSON parsing, for reading/writing Jwt payloads //

}

tasks.named('test') {
	useJUnitPlatform()
}
